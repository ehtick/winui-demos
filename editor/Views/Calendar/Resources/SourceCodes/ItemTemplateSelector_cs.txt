public class CustomCalendarItemTemplateSelector : DataTemplateSelector
{
    public CustomCalendarItemTemplateSelector()
    {
        SpecialDates = new Dictionary<DateTimeOffset, string>();
        SpecialDates.Add(DateTimeOffset.Now.AddMonths(-1).AddDays(1), "BirthDay");
        SpecialDates.Add(DateTimeOffset.Now.AddMonths(-1).AddDays(5), "Appointment");
        ...
    }

    private Dictionary<DateTimeOffset, string> SpecialDates { get; set; }

    protected override DataTemplate SelectTemplateCore(object item, DependencyObject container)
    {
        if (item != null)
        {
            DateTimeOffset calendarItem = (DateTimeOffset)item;
            DateTimeOffset dateTimeOffset = SpecialDates.Keys.FirstOrDefault(x => x.Date == calendarItem.Date);

            if (dateTimeOffset != DateTimeOffset.MinValue)
            {
                string template = this.SpecialDates[dateTimeOffset];

                switch (template)
                {
                    case "BirthDay":
                        return Application.Current.Resources["birthdayTemplate"] as DataTemplate;
                    case "Gift":
                        return Application.Current.Resources["giftTemplate"] as DataTemplate;
                    ...
                }
            }

            return Application.Current.Resources["defaultTemplate"] as DataTemplate;
        }

        return base.SelectTemplateCore(item, container);
    }
}