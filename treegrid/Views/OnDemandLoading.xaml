<Page
    x:Class="TreeGrid.OnDemandLoading"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TreeGrid"
    xmlns:common="using:syncfusion.demoscommon.winui"
    xmlns:coreconverter="using:Syncfusion.UI.Xaml.Core.Converters"
    xmlns:coreextension="using:Syncfusion.UI.Xaml.Core.Extensions"
    xmlns:syncfusion="using:Syncfusion.UI.Xaml.TreeGrid"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <local:Commands x:Key="command" />
        <coreconverter:StringFormatConverter x:Key="stringFormatConverter" />
    </Page.Resources>
    <Page.DataContext>
        <local:EmployeeViewModel/>
    </Page.DataContext>
    <Grid>
        <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto">
            <common:DemoLayout x:Name="Example1" HeaderText="This sample showcases loading data on demand in a tree grid.">
                <common:DemoLayout.Example>
                    <syncfusion:SfTreeGrid
                        Name="sfTreeGrid"
                        Height="500"
                        VerticalAlignment="Top"
                        AutoExpandMode="RootNodesExpanded"
                        AutoGenerateColumns="False"                        
                        ColumnWidthMode="AutoLastColumnFill"
                        ItemsSource="{Binding Employees}">

                        <syncfusion:SfTreeGrid.Columns>
                            <syncfusion:TreeGridTextColumn HeaderText="First Name" MappingName="FirstName" />
                            <syncfusion:TreeGridTextColumn HeaderText="Last Name" MappingName="LastName" />
                            <syncfusion:TreeGridTextColumn HeaderText="Employee ID" MappingName="ID" TextAlignment="Right" />
                            <syncfusion:TreeGridTextColumn MappingName="Title" />
                            <syncfusion:TreeGridTextColumn DisplayBinding="{Binding DOJ, Converter={StaticResource stringFormatConverter}, ConverterParameter=\{0:dd/MM/yyyy\}}"
                                                           HeaderText="Date of Joining"
                                                           MappingName="DOJ"
                                                           TextAlignment="Right" />
                            <syncfusion:TreeGridTextColumn DisplayBinding="{Binding Salary, Converter={StaticResource stringFormatConverter}, ConverterParameter='{}{0:C}'}" 
                                                           MappingName="Salary"
                                                           TextAlignment="Right"/>
                            <syncfusion:TreeGridTextColumn HeaderText="Reports To" MappingName="ReportsTo" TextAlignment="Right"/>
                        </syncfusion:SfTreeGrid.Columns>
                    </syncfusion:SfTreeGrid>
                </common:DemoLayout.Example>
                <common:DemoLayout.Options>
                    <StackPanel Orientation="Vertical">
                        <TextBlock
                             Margin="16,5,5,5"
                            FontSize="14"
                            FontWeight="Bold"
                            Text="Options" />
                        <Button
                             Margin="16,5,5,5"
                            Command="{Binding ExpandCommand, Source={StaticResource command}}"
                            CommandParameter="{Binding ElementName=sfTreeGrid}"
                            Content="Expand All Nodes" />
                        <Button
                             Margin="16,5,5,5"
                            Command="{Binding CollapseCommand, Source={StaticResource command}}"
                            CommandParameter="{Binding ElementName=sfTreeGrid}"
                            Content="Collapse All Nodes" />

                    </StackPanel>
                </common:DemoLayout.Options>
                <common:DemoLayout.Xaml>
                    <x:String xml:space="preserve">
    &lt;syncfusion:SfTreeGrid Name=&quot;sfTreeGrid&quot;
                              AutoExpandMode=&quot;RootNodesExpanded&quot;
                              AutoGenerateColumns=&quot;True&quot;                                                          
                              ColumnWidthMode=&quot;AutoLastColumnFill&quot;                              
                              ItemsSource=&quot;{Binding Employees}&quot; /&gt;
                    </x:String>
                </common:DemoLayout.Xaml>
                <common:DemoLayout.CSharp>
                    <x:String xml:space="preserve">
//C# Code behind
                    
        private void SfTreeGrid_Unloaded(object sender, Microsoft.UI.Xaml.RoutedEventArgs e)
        {
            this.sfTreeGrid.RequestTreeItems -= treeGrid_RequestChildSource;
            this.sfTreeGrid.RepopulateTree();
        }
                    
        private void SfTreeGrid_Loaded(object sender, Microsoft.UI.Xaml.RoutedEventArgs e)
        {
            this.sfTreeGrid.RequestTreeItems += treeGrid_RequestChildSource;
            this.sfTreeGrid.RepopulateTree();
        }
                    
        private void treeGrid_RequestChildSource(object sender, Syncfusion.UI.Xaml.TreeGrid.TreeGridRequestTreeItemsEventArgs e)
        {
            if (e.ParentItem == null)
            {
                //get the root list - get all employees who have no boss 
                e.ChildItems = viewModel.Employees.Where(x => x.ReportsTo == -1); //get all employees whose boss's id is -1 (no boss)
            }
            else //if ParentItem not null, then set args.ChildList to the child items for the given ParentItem.
            {   //get the children of the parent object
                Employee emp = e.ParentItem as Employee;
                if (emp != null)
                {
                    //get all employees that report to the parent employee
                    e.ChildItems = viewModel.GetReportees(emp.ID);
                }
            }
        }
                        </x:String>
                </common:DemoLayout.CSharp>
            </common:DemoLayout>
        </ScrollViewer>
    </Grid>
</Page>
